async function downloadFromSnow(req) {
    const user = await verifyOktaToken(req.headers);
    try {
        const { attach_id } = req?.query
        const reqHeaders = await getServiceNowRequestHeader();
        const apiUrl = `${config.serviceNow.apiBaseUrl}/eplc/essdocumentmanage/download?attach_id=${attach_id}`;
        var requestOptions = {
            method: 'GET',
            headers: reqHeaders,
            // responseType: "arraybuffer"
        };

        // const result = await fetch(apiUrl, requestOptions);
        console.log("ppp")
        fetch(apiUrl, requestOptions)
            .then(response => {
                console.log(response, "ppp")
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }


                const contentEncoding = response.headers.get('content-encoding');

                if (contentEncoding === 'gzip') {
                    return response.buffer().then(buffer => {
                        return new Promise((resolve, reject) => {
                            zlib.gunzip(buffer, (err, decompressedBuffer) => {
                                if (err) {
                                    reject(err);
                                } else {
                                    resolve(decompressedBuffer);
                                }
                            });
                        });
                    });
                } else {
                    return response.buffer();
                }
            })
            .then(data => {
                // data.status = 200
                // const responseDataSet = data
                // return responseDataSet;
                data.status = 200;
                const responseDataSet = data;
                return responseDataSet;
                // fs.writeFile('outputfile.png', data, (err) => {

                //     if (err) {
                //         console.error('Error writing file:', err);
                //     } else {
                //         console.log('File saved as outputfile.png');
                //     }
                // });
            })
            .catch(error => {
                console.error('Error:', error);
            });

        // if (!result.ok) {
        //     const errorDetails = {
        //         status: result.status,
        //         statusText: result.statusText,
        //         data: result,
        //         apiEndpoint: apiUrl
        //     }
        //     throw errorDetails;

        // console.log(result, "ch")


        // result.body.status = 200
        // const responseDataSet = result.body;
        // return responseDataSet;
    } catch (error) {
        console.log("iij", error)
        throw { ...error, ...user };
    }
}
